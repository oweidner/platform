##  ██████╗ ██████╗ ██████╗ ███████╗██╗    ██╗███████╗██████╗ ███████╗████████╗
## ██╔════╝██╔═══██╗██╔══██╗██╔════╝██║    ██║██╔════╝██╔══██╗██╔════╝╚══██╔══╝
## ██║     ██║   ██║██║  ██║█████╗  ██║ █╗ ██║█████╗  ██████╔╝█████╗     ██║
## ██║     ██║   ██║██║  ██║██╔══╝  ██║███╗██║██╔══╝  ██╔══██╗██╔══╝     ██║
## ╚██████╗╚██████╔╝██████╔╝███████╗╚███╔███╔╝███████╗██║  ██║██║        ██║
##  ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝ ╚══╝╚══╝ ╚══════╝╚═╝  ╚═╝╚═╝        ╚═╝
##
## Copyright 2015 Codewerft UG (http://www.codewerft.net).
## All rights reserved.

## Beispielkonfiguration:

[Server]

listen         = :8080
disableauth    = false

; 'adminuser' and 'adminpassword' define the credentials for the Platform
; root / admin user.
adminuser      = root
adminpassword  = fQ6jEZ6G4E

; 'apiprefix' defines the root namespace for the Platform API, i.e.,
; '<apiprefix>/users', '<apiprefix>/plans'. The default is 'platform'.
apiprefix      = platform


[TLS]

enableTLS      = true
keyFile        = keys/tls_sample_key.pem
certFile       = keys/tls_sample_cert.pem


[MYSQL]

host           = unix(/tmp/mysql.sock)   # oder aber tcp(hostname)
database       = ohoi.dev
username       = root


[JWT]
expiration     = 12

# Generate keypair for JWT:
#  openssl genrsa -out jwt_sample.rsa 4096
#  openssl rsa -in jwt_sample.rsa -pubout > jwt_sample.rsa.pub

privatekey     = keys/jwt_sample.rsa
publickey      = keys/jwt_sample.rsa.pub
